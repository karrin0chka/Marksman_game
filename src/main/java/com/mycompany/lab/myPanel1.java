/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.lab;

import static com.mycompany.lab.MainFrame.countPoints;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author User
 */
public class myPanel1 extends javax.swing.JPanel {

    int r2 = 40, r1 = 2 * r2, v = 5;
    int x1 = 270, x2 = x1 + r1 + 20, y1 = 120, y2 = 140;
    int X = 0, Y = 150;
    boolean flagEnd = false;
    
    public void moveCir(int x, int y, int n) {
        if (n == 1) {
            x1 = x;
            y1 = y; 
        }
        
        if (n == 2) {
            x2 = x;
            y2 = y;
        } 
        repaint();
    }
    
    public void nextCir() {
        moveCir(x1, y1 + v, 1);
        moveCir(x2, y2 + 2 * v, 2);
        if (y1 > this.getHeight()) 
            moveCir(x1, 0, 1);
        if (y2 > this.getHeight()) 
            moveCir(x2, 0, 2);
    }
    
    public void moveArr(int x, int y) {
        X = x;
        Y = y;
        repaint();
    }
    
    public void nextArr() {            
            moveArr(X + 5, Y);
        if (X > this.getWidth()) {
            moveArr(0, Y);    
            flagEnd = true;
        }
        if (X + 80 == x1 && Y >= y1 && Y <= y1 + r1)
            MainFrame.countPoints++;
        if (X + 80 == x2 && Y >= y2 && Y <= y2 + 2 * r2)
            MainFrame.countPoints += 2;
    }
    

    
    public myPanel1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); 
        Graphics2D g2d = (Graphics2D) g;
        g2d.setStroke(new BasicStroke(3));
        
        g2d.setColor(Color.red);
        g2d.fillOval(x1, y1, r1, r1);
        g2d.fillOval(x2, y2, r2, r2);
        g2d.setColor(Color.black);
        g2d.drawOval(x1, y1, r1, r1);
        g2d.drawOval(x2, y2, r2, r2);
        
        g2d.drawLine(X, Y, X + 80, Y);
        g2d.drawLine(X + 50, Y - 10, X + 80, Y);
        g2d.drawLine(X + 50, Y + 10, X + 80, Y);
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
